/*
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * OpenAPI spec version: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.microsoft.identity.internal.test.keyvault.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;

/**
 * The secret set parameters.
 */
@ApiModel(description = "The secret set parameters.")

public class SecretSetParameters {
  @SerializedName("value")
  private String value = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("attributes")
  private SecretAttributes attributes = null;

  public SecretSetParameters value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the secret.
   * @return value
  **/
  @ApiModelProperty(required = true, value = "The value of the secret.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public SecretSetParameters tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public SecretSetParameters putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Application specific metadata in the form of key-value pairs.
   * @return tags
  **/
  @ApiModelProperty(value = "Application specific metadata in the form of key-value pairs.")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public SecretSetParameters contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Type of the secret value such as a password.
   * @return contentType
  **/
  @ApiModelProperty(value = "Type of the secret value such as a password.")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public SecretSetParameters attributes(SecretAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * The secret management attributes.
   * @return attributes
  **/
  @ApiModelProperty(value = "The secret management attributes.")
  public SecretAttributes getAttributes() {
    return attributes;
  }

  public void setAttributes(SecretAttributes attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecretSetParameters secretSetParameters = (SecretSetParameters) o;
    return Objects.equals(this.value, secretSetParameters.value) &&
        Objects.equals(this.tags, secretSetParameters.tags) &&
        Objects.equals(this.contentType, secretSetParameters.contentType) &&
        Objects.equals(this.attributes, secretSetParameters.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, tags, contentType, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecretSetParameters {\n");
    
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

