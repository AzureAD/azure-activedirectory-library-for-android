/*
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * OpenAPI spec version: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.microsoft.identity.internal.test.keyvault.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The key update parameters.
 */
@ApiModel(description = "The key update parameters.")

public class KeyUpdateParameters {
  /**
   * Gets or Sets keyOps
   */
  @JsonAdapter(KeyOpsEnum.Adapter.class)
  public enum KeyOpsEnum {
    ENCRYPT("encrypt"),
    
    DECRYPT("decrypt"),
    
    SIGN("sign"),
    
    VERIFY("verify"),
    
    WRAPKEY("wrapKey"),
    
    UNWRAPKEY("unwrapKey");

    private String value;

    KeyOpsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KeyOpsEnum fromValue(String text) {
      for (KeyOpsEnum b : KeyOpsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<KeyOpsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KeyOpsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KeyOpsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return KeyOpsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("key_ops")
  private List<KeyOpsEnum> keyOps = null;

  @SerializedName("attributes")
  private KeyAttributes attributes = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  public KeyUpdateParameters keyOps(List<KeyOpsEnum> keyOps) {
    this.keyOps = keyOps;
    return this;
  }

  public KeyUpdateParameters addKeyOpsItem(KeyOpsEnum keyOpsItem) {
    if (this.keyOps == null) {
      this.keyOps = new ArrayList<KeyOpsEnum>();
    }
    this.keyOps.add(keyOpsItem);
    return this;
  }

   /**
   * Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.
   * @return keyOps
  **/
  @ApiModelProperty(value = "Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.")
  public List<KeyOpsEnum> getKeyOps() {
    return keyOps;
  }

  public void setKeyOps(List<KeyOpsEnum> keyOps) {
    this.keyOps = keyOps;
  }

  public KeyUpdateParameters attributes(KeyAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public KeyAttributes getAttributes() {
    return attributes;
  }

  public void setAttributes(KeyAttributes attributes) {
    this.attributes = attributes;
  }

  public KeyUpdateParameters tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public KeyUpdateParameters putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Application specific metadata in the form of key-value pairs.
   * @return tags
  **/
  @ApiModelProperty(value = "Application specific metadata in the form of key-value pairs.")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyUpdateParameters keyUpdateParameters = (KeyUpdateParameters) o;
    return Objects.equals(this.keyOps, keyUpdateParameters.keyOps) &&
        Objects.equals(this.attributes, keyUpdateParameters.attributes) &&
        Objects.equals(this.tags, keyUpdateParameters.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyOps, attributes, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyUpdateParameters {\n");
    
    sb.append("    keyOps: ").append(toIndentedString(keyOps)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

