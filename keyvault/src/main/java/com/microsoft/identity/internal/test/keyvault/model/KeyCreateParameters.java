/*
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * OpenAPI spec version: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.microsoft.identity.internal.test.keyvault.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The key create parameters.
 */
@ApiModel(description = "The key create parameters.")

public class KeyCreateParameters {
  /**
   * The type of key to create. For valid values, see JsonWebKeyType.
   */
  @JsonAdapter(KtyEnum.Adapter.class)
  public enum KtyEnum {
    EC("EC"),
    
    EC_HSM("EC-HSM"),
    
    RSA("RSA"),
    
    RSA_HSM("RSA-HSM"),
    
    OCT("oct");

    private String value;

    KtyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KtyEnum fromValue(String text) {
      for (KtyEnum b : KtyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<KtyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KtyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KtyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return KtyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("kty")
  private KtyEnum kty = null;

  @SerializedName("key_size")
  private Integer keySize = null;

  /**
   * JSON web key operations. For more information, see JsonWebKeyOperation.
   */
  @JsonAdapter(KeyOpsEnum.Adapter.class)
  public enum KeyOpsEnum {
    ENCRYPT("encrypt"),
    
    DECRYPT("decrypt"),
    
    SIGN("sign"),
    
    VERIFY("verify"),
    
    WRAPKEY("wrapKey"),
    
    UNWRAPKEY("unwrapKey");

    private String value;

    KeyOpsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KeyOpsEnum fromValue(String text) {
      for (KeyOpsEnum b : KeyOpsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<KeyOpsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KeyOpsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KeyOpsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return KeyOpsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("key_ops")
  private List<KeyOpsEnum> keyOps = null;

  @SerializedName("attributes")
  private KeyAttributes attributes = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  /**
   * Elliptic curve name. For valid values, see JsonWebKeyCurveName.
   */
  @JsonAdapter(CrvEnum.Adapter.class)
  public enum CrvEnum {
    P_256("P-256"),
    
    P_384("P-384"),
    
    P_521("P-521"),
    
    SECP256K1("SECP256K1");

    private String value;

    CrvEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CrvEnum fromValue(String text) {
      for (CrvEnum b : CrvEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CrvEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CrvEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CrvEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CrvEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("crv")
  private CrvEnum crv = null;

  public KeyCreateParameters kty(KtyEnum kty) {
    this.kty = kty;
    return this;
  }

   /**
   * The type of key to create. For valid values, see JsonWebKeyType.
   * @return kty
  **/
  @ApiModelProperty(required = true, value = "The type of key to create. For valid values, see JsonWebKeyType.")
  public KtyEnum getKty() {
    return kty;
  }

  public void setKty(KtyEnum kty) {
    this.kty = kty;
  }

  public KeyCreateParameters keySize(Integer keySize) {
    this.keySize = keySize;
    return this;
  }

   /**
   * The key size in bytes. For example, 1024 or 2048.
   * @return keySize
  **/
  @ApiModelProperty(value = "The key size in bytes. For example, 1024 or 2048.")
  public Integer getKeySize() {
    return keySize;
  }

  public void setKeySize(Integer keySize) {
    this.keySize = keySize;
  }

  public KeyCreateParameters keyOps(List<KeyOpsEnum> keyOps) {
    this.keyOps = keyOps;
    return this;
  }

  public KeyCreateParameters addKeyOpsItem(KeyOpsEnum keyOpsItem) {
    if (this.keyOps == null) {
      this.keyOps = new ArrayList<KeyOpsEnum>();
    }
    this.keyOps.add(keyOpsItem);
    return this;
  }

   /**
   * Get keyOps
   * @return keyOps
  **/
  @ApiModelProperty(value = "")
  public List<KeyOpsEnum> getKeyOps() {
    return keyOps;
  }

  public void setKeyOps(List<KeyOpsEnum> keyOps) {
    this.keyOps = keyOps;
  }

  public KeyCreateParameters attributes(KeyAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public KeyAttributes getAttributes() {
    return attributes;
  }

  public void setAttributes(KeyAttributes attributes) {
    this.attributes = attributes;
  }

  public KeyCreateParameters tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public KeyCreateParameters putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Application specific metadata in the form of key-value pairs.
   * @return tags
  **/
  @ApiModelProperty(value = "Application specific metadata in the form of key-value pairs.")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public KeyCreateParameters crv(CrvEnum crv) {
    this.crv = crv;
    return this;
  }

   /**
   * Elliptic curve name. For valid values, see JsonWebKeyCurveName.
   * @return crv
  **/
  @ApiModelProperty(value = "Elliptic curve name. For valid values, see JsonWebKeyCurveName.")
  public CrvEnum getCrv() {
    return crv;
  }

  public void setCrv(CrvEnum crv) {
    this.crv = crv;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyCreateParameters keyCreateParameters = (KeyCreateParameters) o;
    return Objects.equals(this.kty, keyCreateParameters.kty) &&
        Objects.equals(this.keySize, keyCreateParameters.keySize) &&
        Objects.equals(this.keyOps, keyCreateParameters.keyOps) &&
        Objects.equals(this.attributes, keyCreateParameters.attributes) &&
        Objects.equals(this.tags, keyCreateParameters.tags) &&
        Objects.equals(this.crv, keyCreateParameters.crv);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kty, keySize, keyOps, attributes, tags, crv);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyCreateParameters {\n");
    
    sb.append("    kty: ").append(toIndentedString(kty)).append("\n");
    sb.append("    keySize: ").append(toIndentedString(keySize)).append("\n");
    sb.append("    keyOps: ").append(toIndentedString(keyOps)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    crv: ").append(toIndentedString(crv)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

