/*
 * KeyVaultClient
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * OpenAPI spec version: 2016-10-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.microsoft.identity.internal.test.keyvault.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * The subject alternate names of a X509 object.
 */
@ApiModel(description = "The subject alternate names of a X509 object.")

public class SubjectAlternativeNames {
  @SerializedName("emails")
  private List<String> emails = null;

  @SerializedName("dns_names")
  private List<String> dnsNames = null;

  @SerializedName("upns")
  private List<String> upns = null;

  public SubjectAlternativeNames emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public SubjectAlternativeNames addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<String>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Email addresses.
   * @return emails
  **/
  @ApiModelProperty(value = "Email addresses.")
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  public SubjectAlternativeNames dnsNames(List<String> dnsNames) {
    this.dnsNames = dnsNames;
    return this;
  }

  public SubjectAlternativeNames addDnsNamesItem(String dnsNamesItem) {
    if (this.dnsNames == null) {
      this.dnsNames = new ArrayList<String>();
    }
    this.dnsNames.add(dnsNamesItem);
    return this;
  }

   /**
   * Domain names.
   * @return dnsNames
  **/
  @ApiModelProperty(value = "Domain names.")
  public List<String> getDnsNames() {
    return dnsNames;
  }

  public void setDnsNames(List<String> dnsNames) {
    this.dnsNames = dnsNames;
  }

  public SubjectAlternativeNames upns(List<String> upns) {
    this.upns = upns;
    return this;
  }

  public SubjectAlternativeNames addUpnsItem(String upnsItem) {
    if (this.upns == null) {
      this.upns = new ArrayList<String>();
    }
    this.upns.add(upnsItem);
    return this;
  }

   /**
   * User principal names.
   * @return upns
  **/
  @ApiModelProperty(value = "User principal names.")
  public List<String> getUpns() {
    return upns;
  }

  public void setUpns(List<String> upns) {
    this.upns = upns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubjectAlternativeNames subjectAlternativeNames = (SubjectAlternativeNames) o;
    return Objects.equals(this.emails, subjectAlternativeNames.emails) &&
        Objects.equals(this.dnsNames, subjectAlternativeNames.dnsNames) &&
        Objects.equals(this.upns, subjectAlternativeNames.upns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emails, dnsNames, upns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubjectAlternativeNames {\n");
    
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    dnsNames: ").append(toIndentedString(dnsNames)).append("\n");
    sb.append("    upns: ").append(toIndentedString(upns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

