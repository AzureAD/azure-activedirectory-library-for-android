/*
 * // Copyright (c) Microsoft Corporation.
 * // All rights reserved.
 * //
 * // This code is licensed under the MIT License.
 * //
 * // Permission is hereby granted, free of charge, to any person obtaining a copy
 * // of this software and associated documentation files(the "Software"), to deal
 * // in the Software without restriction, including without limitation the rights
 * // to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
 * // copies of the Software, and to permit persons to whom the Software is
 * // furnished to do so, subject to the following conditions :
 * //
 * // The above copyright notice and this permission notice shall be included in
 * // all copies or substantial portions of the Software.
 * //
 * // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * // THE SOFTWARE.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    signingConfigs{
      debug {
              storeFile file('debug/debug.keystore')
              storePassword "android"
              keyAlias "androiddebugkey"
              keyPassword "android"
      }
    }

    defaultConfig {
        applicationId "com.microsoft.aad.automation.testapp"
        minSdkVersion rootProject.ext.automationAppMinSDKVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            //https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.SigningConfig.html
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "main"

    productFlavors {
        adal{
            applicationIdSuffix ".adal"
            versionNameSuffix "-adalD"
            resValue("string", "application_name", "adal")
        }
        /*
        //Leaving out MSAL support until i look into dynamically linking
        msalR{
            applicationIdSuffix ".msalR"
            versionNameSuffix "-msalR"
            resValue("string", "application_name", "msalR")
        }
        */
        adalR{
            applicationIdSuffix ".adalR"
            versionNameSuffix "-adalR"
            resValue("string", "application_name", "adalR")
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

    adalImplementation project(':adal')
    //msalRImplementation group: 'com.microsoft.identity.client', name: 'msal', version: "$rootProject.ext.msal"
    adalRImplementation group: 'com.microsoft.aad', name: 'adal', version: "$rootProject.ext.adalLegacy"
    implementation project(":common")

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'

}
