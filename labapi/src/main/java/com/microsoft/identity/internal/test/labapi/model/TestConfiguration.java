/*
 * MSID Labs API
 * This is the swagger for the MSID Labs Test Information API
 *
 * OpenAPI spec version: 0.0.1
 * Contact: henrij@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.microsoft.identity.internal.test.labapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.microsoft.identity.internal.test.labapi.model.User;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TestConfiguration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-11T15:07:07.694-07:00")
public class TestConfiguration {
  @SerializedName("resource")
  private List<String> resource = null;

  @SerializedName("AppName")
  private String appName = null;

  @SerializedName("AppID")
  private String appId = null;

  @SerializedName("AppVersion")
  private String appVersion = null;

  @SerializedName("RedirectURI")
  private List<String> redirectUri = null;

  @SerializedName("Resource_ids")
  private List<String> resourceIds = null;

  @SerializedName("Authority")
  private List<String> authority = null;

  @SerializedName("Scope")
  private String scope = null;

  @SerializedName("guid")
  private String guid = null;

  @SerializedName("Users")
  private User users = null;

  public TestConfiguration resource(List<String> resource) {
    this.resource = resource;
    return this;
  }

  public TestConfiguration addResourceItem(String resourceItem) {
    if (this.resource == null) {
      this.resource = new ArrayList<String>();
    }
    this.resource.add(resourceItem);
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @ApiModelProperty(value = "")
  public List<String> getResource() {
    return resource;
  }

  public void setResource(List<String> resource) {
    this.resource = resource;
  }

  public TestConfiguration appName(String appName) {
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @ApiModelProperty(value = "")
  public String getAppName() {
    return appName;
  }

  public void setAppName(String appName) {
    this.appName = appName;
  }

  public TestConfiguration appId(String appId) {
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @ApiModelProperty(value = "")
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }

  public TestConfiguration appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

   /**
   * Get appVersion
   * @return appVersion
  **/
  @ApiModelProperty(value = "")
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }

  public TestConfiguration redirectUri(List<String> redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

  public TestConfiguration addRedirectUriItem(String redirectUriItem) {
    if (this.redirectUri == null) {
      this.redirectUri = new ArrayList<String>();
    }
    this.redirectUri.add(redirectUriItem);
    return this;
  }

   /**
   * Get redirectUri
   * @return redirectUri
  **/
  @ApiModelProperty(value = "")
  public List<String> getRedirectUri() {
    return redirectUri;
  }

  public void setRedirectUri(List<String> redirectUri) {
    this.redirectUri = redirectUri;
  }

  public TestConfiguration resourceIds(List<String> resourceIds) {
    this.resourceIds = resourceIds;
    return this;
  }

  public TestConfiguration addResourceIdsItem(String resourceIdsItem) {
    if (this.resourceIds == null) {
      this.resourceIds = new ArrayList<String>();
    }
    this.resourceIds.add(resourceIdsItem);
    return this;
  }

   /**
   * Get resourceIds
   * @return resourceIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getResourceIds() {
    return resourceIds;
  }

  public void setResourceIds(List<String> resourceIds) {
    this.resourceIds = resourceIds;
  }

  public TestConfiguration authority(List<String> authority) {
    this.authority = authority;
    return this;
  }

  public TestConfiguration addAuthorityItem(String authorityItem) {
    if (this.authority == null) {
      this.authority = new ArrayList<String>();
    }
    this.authority.add(authorityItem);
    return this;
  }

   /**
   * Get authority
   * @return authority
  **/
  @ApiModelProperty(value = "")
  public List<String> getAuthority() {
    return authority;
  }

  public void setAuthority(List<String> authority) {
    this.authority = authority;
  }

  public TestConfiguration scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public TestConfiguration guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @ApiModelProperty(value = "")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public TestConfiguration users(User users) {
    this.users = users;
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @ApiModelProperty(value = "")
  public User getUsers() {
    return users;
  }

  public void setUsers(User users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestConfiguration testConfiguration = (TestConfiguration) o;
    return Objects.equals(this.resource, testConfiguration.resource) &&
        Objects.equals(this.appName, testConfiguration.appName) &&
        Objects.equals(this.appId, testConfiguration.appId) &&
        Objects.equals(this.appVersion, testConfiguration.appVersion) &&
        Objects.equals(this.redirectUri, testConfiguration.redirectUri) &&
        Objects.equals(this.resourceIds, testConfiguration.resourceIds) &&
        Objects.equals(this.authority, testConfiguration.authority) &&
        Objects.equals(this.scope, testConfiguration.scope) &&
        Objects.equals(this.guid, testConfiguration.guid) &&
        Objects.equals(this.users, testConfiguration.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, appName, appId, appVersion, redirectUri, resourceIds, authority, scope, guid, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestConfiguration {\n");
    
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    authority: ").append(toIndentedString(authority)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

